{"version":3,"sources":["logo.svg","components/PokemonsList.js","components/Chart.js","components/Moves.js","components/Colors.js","components/Types.js","components/Stats.js","components/Description.js","components/Pokemon.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","isLoadingExternally","PokemonsList","state","pokemons","selectedValue","handleChange","val","setState","props","parentCallback","value","singleOption","Option","data","label","singleValue","SingleValue","axios","get","then","res","newRes","results","map","pokemon","url","split","id","pop","name","toUpperCase","Array","from","array","page","slice","placeholder","formatOptionLabel","this","onChange","isLoading","options","optionHeight","styles","colourStyles","React","Component","style","width","margin","display","justifyContent","alignItems","fontSize","color","src","alt","height","marginRight","input","marginLeft","border","Chart","chartData","scale","angleLines","ticks","callback","backdropColor","suggestedMin","suggestedMax","stepSize","legend","maintainAspectRatio","Moves","pokeData","moves","forEach","move","version_group_details","level_learned_at","push","join","lvl","sort","a","b","level","className","key","uuidv1","pokeColors","Types","pokeColor","types","type","backgroundColor","boxShadow","Stats","stats","stat","base_stat","Description","text","i","flavor_text_entries","length","language","flavor","flavor_text","replace","renderOption","option","console","log","pokemonData","pokemonEvoImages","image","backgroundImage","backgroundRepeat","backgroundSize","pokemonEvolutions","evolution","pokemonSpecies","evolutionUrl","pokemonStory","loading","menuOption","nextEvolution","evolutions","images","evolution_chain","chain","species","getID","evolves_to","getEvolutions","prevProps","onClick","getChartData","labels","datasets","getStats","pointStyle","pointRadius","statsArray","newUrl","App","selected","selectedColor","getPokemon","getColor","slot","gradients","logo","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c46c4aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3cfd5e85.svg\";","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Select } from \"react-select-virtualized\";\r\nimport { components } from \"react-select\";\r\n\r\nlet isLoadingExternally = false;\r\n\r\nexport default class PokemonsList extends React.Component {\r\n  state = {\r\n    pokemons: [],\r\n    selectedValue: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    isLoadingExternally = true;\r\n    axios.get(`https://pokeapi.co/api/v2/pokemon?limit=721`).then(res => {\r\n      let newRes = res.data.results.map(pokemon => {\r\n        let url = pokemon.url.split(\"/\");\r\n        let id = url.pop() || url.pop();\r\n        return {\r\n          label: pokemon.name.toUpperCase(),\r\n          value: id\r\n        };\r\n      });\r\n\r\n      this.setState({ pokemons: Array.from(newRes) });\r\n      isLoadingExternally = false;\r\n    });\r\n  }\r\n\r\n  getPage(array, page) {\r\n    return array.slice(0, page * 20);\r\n  }\r\n\r\n  handleChange = val => {\r\n    this.setState({ selectedValue: val });\r\n    if (val) {\r\n      this.props.parentCallback(val.value);\r\n    }\r\n  };\r\n\r\n  singleOption = props => (\r\n    <components.Option {...props}>\r\n      {props.data.value}\r\n      {props.label}\r\n    </components.Option>\r\n  );\r\n\r\n  singleValue = props => (\r\n    <components.SingleValue {...props}>\r\n      {props.data.value}\r\n    </components.SingleValue>\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <Select\r\n        //classNamePrefix=\"pokemons-list\"\r\n        placeholder={\"Select your pokemon\"}\r\n        formatOptionLabel={formatOptionLabel}\r\n        name={\"form-field-name\"}\r\n        value={this.state.selectedValue}\r\n        onChange={this.handleChange}\r\n        isLoading={isLoadingExternally}\r\n        options={this.state.pokemons}\r\n        optionHeight={60}\r\n        styles={colourStyles}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst formatOptionLabel = ({ value, label }) => (\r\n  <div\r\n    style={{\r\n      width: \"100%\",\r\n      margin: \"0 auto\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\"\r\n    }}\r\n  >\r\n    <div style={{ fontSize: \"18px\", color: \"#333\" }}>{label}</div>\r\n\r\n    <img\r\n      src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${value}.png`}\r\n      alt=\"pokemon\"\r\n      style={{ height: \"55px\", marginRight: \"25px\" }}\r\n    ></img>\r\n  </div>\r\n);\r\n\r\nconst colourStyles = {\r\n  // control: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n  //   return {\r\n  //     ...styles,\r\n  //     border: \"none\",\r\n  //     border: isFocused ? \"1px solid pink\" : \"none\",\r\n  //     border: isSelected ? \"1px solid pink\" : \"none\"\r\n  //     //border: isFocused ? \"green\" : \"blue\"\r\n  //   };\r\n  // },\r\n\r\n  // input: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n  //   return {\r\n  //     ...styles,\r\n  //     border: \"none\",\r\n  //     border: isFocused ? \"1px solid pink\" : \"none\",\r\n  //     border: isSelected ? \"1px solid pink\" : \"none\"\r\n  //     //border: isFocused ? \"green\" : \"blue\"\r\n  //   };\r\n  // },\r\n  // control: styles => ({ ...styles, marginLeft: \"10px\" }),\r\n  input: styles => ({ ...styles, marginLeft: \"10px\" }),\r\n  placeholder: styles => ({ ...styles, marginLeft: \"10px\" }),\r\n  singleValue: (styles, { data }) => ({\r\n    ...styles,\r\n    marginLeft: \"10px\",\r\n    border: \"none\"\r\n  })\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Radar } from \"react-chartjs-2\";\r\n\r\nclass Chart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chartData: props.chartData\r\n    };\r\n  }\r\n  render() {\r\n    return <Radar data={this.state.chartData} options={options} />;\r\n  }\r\n}\r\n\r\nexport default Chart;\r\n\r\nconst options = {\r\n  scale: {\r\n    angleLines: {\r\n      display: false\r\n    },\r\n    ticks: {\r\n      callback: function() {\r\n        return \"\";\r\n      },\r\n      backdropColor: \"rgba(0, 0, 0, 0)\",\r\n      suggestedMin: 0,\r\n      suggestedMax: 140,\r\n      stepSize: 20\r\n    }\r\n  },\r\n  legend: {\r\n    display: false\r\n  },\r\n  maintainAspectRatio: false\r\n};\r\n","import uuidv1 from \"uuid\";\r\nimport React from \"react\";\r\n\r\nconst Moves = ({ pokeData }) => {\r\n  let moves = [];\r\n  pokeData.moves.forEach(move => {\r\n    if (move.version_group_details[0].level_learned_at !== 0)\r\n      moves.push({\r\n        name: move.move.name.split(\"-\").join(\" \"),\r\n        lvl: move.version_group_details[0].level_learned_at\r\n      });\r\n  });\r\n  moves = moves.sort((a, b) => {\r\n    return a.level > b.level ? 1 : -1;\r\n  });\r\n\r\n  return moves.map(move => {\r\n    return (\r\n      <div className=\"pokemon-move\" key={uuidv1()}>\r\n        <span className=\"move-name\">{move.name}</span>\r\n        <span className=\"move-lvl\">level {move.lvl}</span>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nexport default Moves;\r\n","const pokeColors = color => {\r\n  switch (color) {\r\n    case \"fire\":\r\n      return \"#FB9B51\";\r\n    case \"water\":\r\n      return \"#559EDF\";\r\n    case \"grass\":\r\n      return \"#5fbc51\";\r\n    case \"electric\":\r\n      return \"#EDD53E\";\r\n    case \"psychic\":\r\n      return \"#EC8CE5\";\r\n    case \"ice\":\r\n      return \"#70CCBD\";\r\n    case \"dragon\":\r\n      return \"#516AAC\";\r\n    case \"dark\":\r\n      return \"#595761\";\r\n    case \"fairy\":\r\n      return \"#F66F71\";\r\n    case \"normal\":\r\n      return \"#C5B489\";\r\n    case \"fighting\":\r\n      return \"#CE42657\";\r\n    case \"flying\":\r\n      return \"#516AAC\";\r\n    case \"poison\":\r\n      return \"#A864C7\";\r\n    case \"ground\":\r\n      return \"#C5B489\";\r\n    case \"rock\":\r\n      return \"#C5B489\";\r\n    case \"bug\":\r\n      return \"#92BC2C6\";\r\n    case \"ghost\":\r\n      return \"#516AAC\";\r\n    case \"steel\":\r\n      return \"#9298A4\";\r\n\r\n    default:\r\n      return \"#FAFAFA\";\r\n  }\r\n};\r\n\r\nexport default pokeColors;\r\n","import uuidv1 from \"uuid\";\r\nimport React from \"react\";\r\nimport pokeColors from \"./Colors\";\r\n\r\nconst Types = ({ pokeData }) => {\r\n  let pokeColor = \"\";\r\n  let types = pokeData.types;\r\n  if (types) {\r\n    return (\r\n      <>\r\n        {types.map(type => {\r\n          pokeColor = pokeColors(type.type.name);\r\n          return (\r\n            <span\r\n              className=\"pokemon-species-info\"\r\n              style={{\r\n                backgroundColor: `${pokeColor}`,\r\n                boxShadow: `0 0 5px ${pokeColor}`\r\n              }}\r\n              key={uuidv1()}\r\n            >\r\n              {type.type.name}\r\n            </span>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Types;\r\n","import uuidv1 from \"uuid\";\r\nimport React from \"react\";\r\n\r\nconst Stats = ({ pokeData }) => {\r\n  return (\r\n    <>\r\n      {pokeData.stats.map(stat => (\r\n        <div className=\"pokemon-stat-row\" key={uuidv1()}>\r\n          <span className=\"pokemon-stat-value\" key={uuidv1()}>\r\n            {stat.base_stat}\r\n          </span>\r\n          <span className=\"pokemon-stat-label\" key={uuidv1()}>\r\n            {stat.stat.name}\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React from \"react\";\r\nconst Description = ({ pokeData }) => {\r\n  let text = \"\";\r\n\r\n  for (let i = 0; i < pokeData.flavor_text_entries.length; i++) {\r\n    if (pokeData.flavor_text_entries[i].language.name === \"en\") {\r\n      let flavor = pokeData.flavor_text_entries[i].flavor_text.replace(\r\n        /(\\r\\n|\\n|\\r)/gm,\r\n        \" \"\r\n      );\r\n      text = <p className=\"pokemon-species-story\">{flavor}</p>;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return text;\r\n};\r\n\r\nexport default Description;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport uuidv1 from \"uuid\";\r\nimport Chart from \"./Chart\";\r\nimport Moves from \"./Moves\";\r\nimport Types from \"./Types\";\r\nimport pokeColors from \"./Colors\";\r\nimport Stats from \"./Stats\";\r\nimport Description from \"./Description\";\r\n\r\nexport default class PokemonsList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      pokemonData: \"\",\r\n      pokemonSpecies: \"\",\r\n      evolutionUrl: \"\",\r\n      pokemonStory: [],\r\n      pokemonEvolutions: [],\r\n      pokemonEvoImages: [],\r\n      loading: true,\r\n      menuOption: \"stats\"\r\n    };\r\n  }\r\n\r\n  getEvolutions() {\r\n    const evolutions = [];\r\n    const images = [];\r\n    let nextEvolution;\r\n    let data = this.state.pokemonSpecies;\r\n\r\n    if (data) {\r\n      axios.get(data.evolution_chain.url).then(res => {\r\n        evolutions.push(res.data.chain.species.name);\r\n        images.push(getID(res.data.chain.species.url));\r\n        nextEvolution = res.data.chain.evolves_to;\r\n        while (nextEvolution.length) {\r\n          evolutions.push(nextEvolution[0].species.name);\r\n          images.push(getID(nextEvolution[0].species.url));\r\n          nextEvolution = nextEvolution[0].evolves_to;\r\n        }\r\n        this.setState({\r\n          pokemonEvolutions: evolutions,\r\n          pokemonEvoImages: images\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  click() {\r\n    console.log(\"asd\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon/${this.props.id}`)\r\n      .then(res => {\r\n        this.setState({\r\n          pokemonData: res.data\r\n        });\r\n\r\n        this.props.parentCallback(res.data.types);\r\n      });\r\n\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon-species/${this.props.id}`)\r\n      .then(res => {\r\n        this.setState({\r\n          pokemonSpecies: res.data,\r\n          loading: false\r\n        });\r\n        this.getEvolutions();\r\n      });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.id !== this.props.id) {\r\n      this.setState({ loading: true });\r\n      axios\r\n        .get(`https://pokeapi.co/api/v2/pokemon/${this.props.id}`)\r\n        .then(res => {\r\n          this.setState({\r\n            pokemonData: res.data\r\n          });\r\n          this.props.parentCallback(res.data.types);\r\n        });\r\n\r\n      axios\r\n        .get(`https://pokeapi.co/api/v2/pokemon-species/${this.props.id}`)\r\n        .then(res => {\r\n          this.setState({\r\n            pokemonSpecies: res.data,\r\n\r\n            loading: false\r\n          });\r\n          this.getEvolutions();\r\n        });\r\n    }\r\n  }\r\n\r\n  renderOption = ({ option }) => {\r\n    console.log(option);\r\n    //console.log(this);\r\n    switch (option) {\r\n      case \"stats\":\r\n        return (\r\n          <div className=\"pokemon-stats-container\">\r\n            <Stats pokeData={this.state.pokemonData} />\r\n            <span className=\"pokemon-label\">Stats:</span>\r\n          </div>\r\n        );\r\n\r\n      case \"moves\":\r\n        return (\r\n          <div className=\"pokemon-moves-container\">\r\n            <span className=\"pokemon-label\">Moves:</span>\r\n            <Moves pokeData={this.state.pokemonData} />\r\n          </div>\r\n        );\r\n      case \"evolutions\":\r\n        return (\r\n          <div className=\"pokemon-evolutions\">\r\n            <h2 className=\"pokemon-evolutions-title\">Evolutions</h2>\r\n\r\n            <div className=\"evolutions-images-container\">\r\n              {this.state.pokemonEvoImages.map(image => (\r\n                <div\r\n                  key={uuidv1()}\r\n                  className=\"pokemon-evo-image\"\r\n                  style={{\r\n                    backgroundImage: `url(./img/pokemons-optimized/${image}.png)`,\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize: \"cover\"\r\n                  }}\r\n                ></div>\r\n              ))}\r\n            </div>\r\n            <div className=\"evolutions-labels\">\r\n              {this.state.pokemonEvolutions.map(evolution => (\r\n                <span className=\"evolution-name\" key={uuidv1()}>\r\n                  {evolution}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return <div>asd</div>;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.loading)\r\n      return (\r\n        <div className=\"pokemon-container\">\r\n          <div\r\n            className=\"pokemon-image\"\r\n            style={{\r\n              backgroundImage: `url(./img/pokemons-optimized/${this.props.id}.png)`,\r\n              backgroundRepeat: \"no-repeat\",\r\n              backgroundSize: \"cover\"\r\n            }}\r\n          ></div>\r\n          <h1 className=\"pokemon-name\">{this.state.pokemonData.name}</h1>\r\n          <div className=\"pokemon-species-container\">\r\n            <div className=\"pokemon-types-container\">\r\n              <Types pokeData={this.state.pokemonData} />\r\n            </div>\r\n\r\n            <Description pokeData={this.state.pokemonSpecies} />\r\n          </div>\r\n\r\n          <div className=\"buttons-container\">\r\n            <div\r\n              className=\"button\"\r\n              onClick={() => this.setState({ menuOption: \"stats\" })}\r\n              style={\r\n                this.state.menuOption === \"stats\"\r\n                  ? {\r\n                      backgroundColor: `${pokeColors(\r\n                        this.state.pokemonData.types[0].type.name\r\n                      )}`,\r\n\r\n                      boxShadow: `0 0 5px ${pokeColors(\r\n                        this.state.pokemonData.types[0].type.name\r\n                      )}`,\r\n                      color: \"#fafafa\"\r\n                    }\r\n                  : {\r\n                      backgroundColor: \"#fafafa\",\r\n                      boxShadow: \"none\",\r\n                      color: `${pokeColors(\r\n                        this.state.pokemonData.types[0].type.name\r\n                      )}`\r\n                    }\r\n              }\r\n            >\r\n              STATS\r\n            </div>\r\n            <div\r\n              className=\"button\"\r\n              onClick={() => this.setState({ menuOption: \"evolutions\" })}\r\n              style={\r\n                this.state.menuOption === \"evolutions\"\r\n                  ? {\r\n                      backgroundColor: `${pokeColors(\r\n                        this.state.pokemonData.types[0].type.name\r\n                      )}`,\r\n\r\n                      boxShadow: `0 0 5px ${pokeColors(\r\n                        this.state.pokemonData.types[0].type.name\r\n                      )}`,\r\n                      color: \"#fafafa\"\r\n                    }\r\n                  : {\r\n                      backgroundColor: \"#fafafa\",\r\n                      boxShadow: \"none\",\r\n                      color: `${pokeColors(\r\n                        this.state.pokemonData.types[0].type.name\r\n                      )}`\r\n                    }\r\n              }\r\n            >\r\n              EVOLUTIONS\r\n            </div>\r\n            <div\r\n              className=\"button\"\r\n              onClick={() => this.setState({ menuOption: \"moves\" })}\r\n              style={\r\n                this.state.menuOption === \"moves\"\r\n                  ? {\r\n                      backgroundColor: `${pokeColors(\r\n                        this.state.pokemonData.types[0].type.name\r\n                      )}`,\r\n\r\n                      boxShadow: `0 0 5px ${pokeColors(\r\n                        this.state.pokemonData.types[0].type.name\r\n                      )}`,\r\n                      color: \"#fafafa\"\r\n                    }\r\n                  : {\r\n                      backgroundColor: \"#fafafa\",\r\n                      boxShadow: \"none\",\r\n                      color: `${pokeColors(\r\n                        this.state.pokemonData.types[0].type.name\r\n                      )}`\r\n                    }\r\n              }\r\n            >\r\n              MOVES\r\n            </div>\r\n          </div>\r\n\r\n          {this.state.menuOption === \"moves\" ? (\r\n            <div className=\"pokemon-moves-container\">\r\n              <Moves pokeData={this.state.pokemonData} />\r\n            </div>\r\n          ) : null}\r\n\r\n          {this.state.menuOption === \"stats\" ? (\r\n            <div>\r\n              {\" \"}\r\n              {/* <div className=\"pokemon-stats-container\">\r\n                <Stats pokeData={this.state.pokemonData} />\r\n              </div> */}\r\n              <div className=\"pokemon-stats-chart\">\r\n                <Chart\r\n                  chartData={getChartData(\r\n                    this.state.pokemonData.stats,\r\n                    this.state.pokemonData.types\r\n                  )}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n\r\n          {this.state.menuOption === \"evolutions\" ? (\r\n            <div className=\"pokemon-evolutions\">\r\n              <div className=\"evolutions-images-container\">\r\n                {this.state.pokemonEvoImages.map(image => (\r\n                  <div\r\n                    key={uuidv1()}\r\n                    className=\"pokemon-evo-image\"\r\n                    style={{\r\n                      backgroundImage: `url(./img/pokemons-optimized/${image}.png)`,\r\n                      backgroundRepeat: \"no-repeat\",\r\n                      backgroundSize: \"cover\"\r\n                    }}\r\n                  ></div>\r\n                ))}\r\n              </div>\r\n              <div className=\"evolutions-labels\">\r\n                {this.state.pokemonEvolutions.map(evolution => (\r\n                  <span className=\"evolution-name\" key={uuidv1()}>\r\n                    {evolution}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      );\r\n    else return <div>Loading...</div>;\r\n  }\r\n}\r\n\r\nconst getChartData = (data, types) => {\r\n  let pokeData = getStats(data);\r\n\r\n  var chartData = {\r\n    labels: [\"SPD\", \"SDEF\", \"SATK\", \"DEF\", \"ATK\", \"HP\"],\r\n    datasets: [\r\n      {\r\n        label: \"stats\",\r\n        data: pokeData,\r\n        pointStyle: \"circle\",\r\n\r\n        pointRadius: 3\r\n      }\r\n    ]\r\n  };\r\n\r\n  return chartData;\r\n};\r\n\r\nconst getStats = stats => {\r\n  let statsArray = [];\r\n  if (stats.length) {\r\n    statsArray = stats.map(stat => {\r\n      return stat.base_stat;\r\n    });\r\n  }\r\n  return statsArray;\r\n};\r\n\r\nconst getID = url => {\r\n  let newUrl = url.split(\"/\");\r\n  let id = newUrl.pop() || newUrl.pop();\r\n  return id;\r\n};\r\n","import React, { Component } from \"react\";\nimport PokemonsList from \"./components/PokemonsList\";\nimport Pokemon from \"./components/Pokemon\";\nimport \"./App.css\";\nimport logo from \"./logo.svg\";\n\nclass App extends Component {\n  state = {\n    selected: \"\",\n    selectedColor: \"\"\n  };\n\n  getPokemon = pokemon => {\n    this.setState({ selected: pokemon });\n  };\n\n  getColor = types => {\n    types.forEach(type => {\n      if (type.slot === 1) this.setState({ selectedColor: type.type.name });\n    });\n\n    //this.setState({ selectedColor: color[0] });\n  };\n\n  gradients = color => {\n    switch (color) {\n      case \"fire\":\n        return \"#FB9B51, #FBAE46\";\n      case \"water\":\n        return \"#559EDF, #69B9E3\";\n      case \"grass\":\n        return \"#5fbc51, #5ac178\";\n      case \"electric\":\n        return \"#EDD53E, #FBE273\";\n      case \"psychic\":\n        return \"#EC8CE5, #F3A7E7\";\n      case \"ice\":\n        return \"#70CCBD, #8CDDD4\";\n      case \"dragon\":\n        return \"#516AAC, #7773D4\";\n      case \"dark\":\n        return \"#595761, #6E7587\";\n      case \"fairy\":\n        return \"#F66F71, #FE9F92\";\n      case \"normal\":\n        return \"#C5B489, #D7CD90\";\n      case \"fighting\":\n        return \"#CE4265, #E74347\";\n      case \"flying\":\n        return \"#516AAC, #7773D4\";\n      case \"poison\":\n        return \"#A864C7, #C261D4\";\n      case \"ground\":\n        return \"#C5B489, #D7CD90\";\n      case \"rock\":\n        //fix\n        return \"#C5B489, #D7CD90\";\n      case \"bug\":\n        return \"#92BC2C, #AFC836\";\n      case \"ghost\":\n        return \"#516AAC, #7773D4\";\n      case \"steel\":\n        return \"#9298A4, #A3A49E\";\n\n      default:\n        return \"#FAFAFA, #F5F5F5\";\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className=\"wrapper\"\n        style={{\n          backgroundImage: `linear-gradient(to right, ${this.gradients(\n            this.state.selectedColor\n          )})`\n        }}\n      >\n        <header>\n          <img className=\"header-logo\" src={logo} alt=\"Pokémon\"></img>\n          <PokemonsList parentCallback={this.getPokemon} />\n        </header>\n        {this.state.selected && (\n          <Pokemon parentCallback={this.getColor} id={this.state.selected} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}