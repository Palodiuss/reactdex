{"version":3,"sources":["pokemon2.svg","components/PokemonsList.js","components/Chart.js","components/Pokemon.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","isLoadingExternally","PokemonsList","state","pokemons","selectedValue","handleChange","val","setState","props","parentCallback","value","singleOption","Option","data","label","singleValue","SingleValue","axios","get","then","res","newRes","results","map","pokemon","url","split","id","pop","name","toUpperCase","Array","from","array","page","slice","placeholder","formatOptionLabel","this","onChange","isLoading","options","optionHeight","styles","colourStyles","React","Component","style","width","margin","display","justifyContent","alignItems","fontSize","color","src","alt","height","marginRight","input","marginLeft","border","Chart","chartData","labels","datasets","backgroundColor","pointStyle","pointRadius","scale","angleLines","ticks","callback","backdropColor","suggestedMin","suggestedMax","stepSize","legend","maintainAspectRatio","pokemonData","pokemonSpecies","pokemonSpec","pokemonSpecColor","evolutionUrl","pokemonAbilities","pokes","pokemonStats","console","log","abilities","stats","ability","egg_groups","pokemonStory","flavor_text_entries","flavor_text","evolution_chain","prevProps","className","backgroundImage","backgroundRepeat","backgroundSize","Abilities","key","slot","Stats","stat","uuidv1","base_stat","App","selected","getPokemon","logo","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f33fee00.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokemon2.3cfd5e85.svg\";","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Select } from \"react-select-virtualized\";\r\nimport { components } from \"react-select\";\r\n\r\nlet isLoadingExternally = false;\r\n\r\nexport default class PokemonsList extends React.Component {\r\n  state = {\r\n    pokemons: [],\r\n    selectedValue: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    isLoadingExternally = true;\r\n    axios.get(`https://pokeapi.co/api/v2/pokemon?limit=964`).then(res => {\r\n      let newRes = res.data.results.map(pokemon => {\r\n        let url = pokemon.url.split(\"/\");\r\n        let id = url.pop() || url.pop();\r\n        return {\r\n          label: pokemon.name.toUpperCase(),\r\n          value: id\r\n        };\r\n      });\r\n\r\n      this.setState({ pokemons: Array.from(newRes) });\r\n      isLoadingExternally = false;\r\n    });\r\n  }\r\n\r\n  getPage(array, page) {\r\n    return array.slice(0, page * 20);\r\n  }\r\n\r\n  handleChange = val => {\r\n    this.setState({ selectedValue: val });\r\n    if (val) {\r\n      this.props.parentCallback(val.value);\r\n    }\r\n  };\r\n\r\n  singleOption = props => (\r\n    <components.Option {...props}>\r\n      {props.data.value}\r\n      {props.label}\r\n    </components.Option>\r\n  );\r\n\r\n  singleValue = props => (\r\n    <components.SingleValue {...props}>\r\n      {props.data.value}\r\n    </components.SingleValue>\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <Select\r\n        //classNamePrefix=\"pokemons-list\"\r\n        placeholder={\"Select your pokemon\"}\r\n        formatOptionLabel={formatOptionLabel}\r\n        name={\"form-field-name\"}\r\n        value={this.state.selectedValue}\r\n        onChange={this.handleChange}\r\n        isLoading={isLoadingExternally}\r\n        options={this.state.pokemons}\r\n        optionHeight={60}\r\n        styles={colourStyles}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst formatOptionLabel = ({ value, label }) => (\r\n  <div\r\n    style={{\r\n      width: \"100%\",\r\n      margin: \"0 auto\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\"\r\n    }}\r\n  >\r\n    <div style={{ fontSize: \"18px\", color: \"#333\" }}>{label}</div>\r\n\r\n    <img\r\n      src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${value}.png`}\r\n      alt=\"pokemon\"\r\n      style={{ height: \"55px\", marginRight: \"25px\" }}\r\n    ></img>\r\n  </div>\r\n);\r\n\r\nconst colourStyles = {\r\n  // control: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n  //   return {\r\n  //     ...styles,\r\n  //     border: \"none\",\r\n  //     border: isFocused ? \"1px solid pink\" : \"none\",\r\n  //     border: isSelected ? \"1px solid pink\" : \"none\"\r\n  //     //border: isFocused ? \"green\" : \"blue\"\r\n  //   };\r\n  // },\r\n\r\n  // input: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n  //   return {\r\n  //     ...styles,\r\n  //     border: \"none\",\r\n  //     border: isFocused ? \"1px solid pink\" : \"none\",\r\n  //     border: isSelected ? \"1px solid pink\" : \"none\"\r\n  //     //border: isFocused ? \"green\" : \"blue\"\r\n  //   };\r\n  // },\r\n  // control: styles => ({ ...styles, marginLeft: \"10px\" }),\r\n  input: styles => ({ ...styles, marginLeft: \"10px\" }),\r\n  placeholder: styles => ({ ...styles, marginLeft: \"10px\" }),\r\n  singleValue: (styles, { data }) => ({\r\n    ...styles,\r\n    marginLeft: \"10px\",\r\n    border: \"none\"\r\n  })\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Radar, Bar } from \"react-chartjs-2\";\r\n\r\nclass Chart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chartData: {\r\n        labels: [\r\n          \"hp\",\r\n          \"attack\",\r\n          \"defense\",\r\n          \"special-attack\",\r\n          \"special-defense\",\r\n          \"speed\"\r\n        ],\r\n        datasets: [\r\n          {\r\n            label: \"stats\",\r\n            data: [91, 100, 95, 100, 100, 82],\r\n            backgroundColor: \"rgba(59, 96, 252, 0.6)\",\r\n            pointStyle: \"circle\",\r\n\r\n            pointRadius: 3\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  }\r\n  render() {\r\n    return <Radar data={this.state.chartData} options={options} />;\r\n  }\r\n}\r\n\r\nexport default Chart;\r\n\r\nconst options = {\r\n  // scales: {\r\n  //   yAxes: [{ ticks: { beginAtZero: true, maximum: 300, fontSize: 16 } }],\r\n  //   xAxes: [{ ticks: { beginAtZero: true, fontSize: 16 } }]\r\n  // }\r\n  scale: {\r\n    angleLines: {\r\n      display: false\r\n    },\r\n    ticks: {\r\n      callback: function() {\r\n        return \"\";\r\n      },\r\n      backdropColor: \"rgba(0, 0, 0, 0)\",\r\n      suggestedMin: 0,\r\n      suggestedMax: 180,\r\n      stepSize: 20\r\n    }\r\n  },\r\n  legend: {\r\n    display: false\r\n  },\r\n  maintainAspectRatio: false\r\n};\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport uuidv1 from \"uuid\";\r\nimport Chart from \"./Chart\";\r\n\r\nexport default class PokemonsList extends React.Component {\r\n  state = {\r\n    id: \"\",\r\n    pokemonData: \"\",\r\n    pokemonSpecies: \"\",\r\n    pokemonSpec: \"\",\r\n    pokemonSpecColor: \"\",\r\n    evolutionUrl: \"\",\r\n    pokemonAbilities: \"\",\r\n    pokes: [],\r\n    pokemonStats: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon/${this.props.id}`)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          pokemonData: res.data,\r\n          pokes: res.data.abilities,\r\n          pokemonStats: res.data.stats,\r\n          pokemonAbilities: res.data.abilities[0].ability.name\r\n        });\r\n      });\r\n\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon-species/${this.props.id}`)\r\n      .then(res => {\r\n        //console.log(res.data);\r\n        this.setState({\r\n          pokemonSpecies: res.data,\r\n          pokemonSpec: res.data.egg_groups[0].name,\r\n          pokemonSpecColor: res.data.color.name,\r\n          pokemonStory: res.data.flavor_text_entries[1].flavor_text,\r\n          evolutionUrl: res.data.evolution_chain.url\r\n        });\r\n\r\n        // axios.get(this.state.evolutionUrl).then(res => {\r\n        //   console.log(res.data.chain.evolves_to);\r\n        // });\r\n      });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.id !== this.props.id) {\r\n      axios\r\n        .get(`https://pokeapi.co/api/v2/pokemon/${this.props.id}`)\r\n        .then(res => {\r\n          //console.log(res.data);\r\n          this.setState({\r\n            pokemonData: res.data,\r\n            pokes: res.data.abilities,\r\n            pokemonStats: res.data.stats,\r\n            pokemonAbilities: res.data.abilities[0].ability.name\r\n          });\r\n          console.log(this.state.pokes);\r\n        });\r\n\r\n      axios\r\n        .get(`https://pokeapi.co/api/v2/pokemon-species/${this.props.id}`)\r\n        .then(res => {\r\n          //console.log(res.data);\r\n          this.setState({\r\n            pokemonSpecies: res.data,\r\n            pokemonSpec: res.data.egg_groups[0].name,\r\n            pokemonSpecColor: res.data.color.name,\r\n            pokemonStory: res.data.flavor_text_entries[1].flavor_text,\r\n            evolutionUrl: res.data.evolution_chain.url\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  assignValues() {\r\n    this.setState({\r\n      pokemonSpec: this.pokemonSpecies.egg_groups[0].name\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"pokemon-container\">\r\n        <div\r\n          className=\"pokemon-image\"\r\n          style={{\r\n            width: \"200px\",\r\n            height: \"200px\",\r\n            backgroundImage: `url(https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${this.props.id}.png)`,\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundSize: \"cover\"\r\n          }}\r\n        ></div>\r\n        <div className=\"pokemon-species-container\">\r\n          <span className=\"pokemon-label\">Species:</span>\r\n          <span\r\n            className=\"pokemon-species-info\"\r\n            style={{\r\n              backgroundColor: `${this.state.pokemonSpecColor}`\r\n            }}\r\n          >\r\n            {this.state.pokemonSpec}\r\n          </span>\r\n          <p className=\"pokemon-species-story\">{this.state.pokemonStory}</p>\r\n        </div>\r\n        <div className=\"pokemon-abilities-container\">\r\n          <span className=\"pokemon-label\">Abilities:</span>\r\n          <Abilities abilities={this.state.pokes} />\r\n        </div>\r\n\r\n        <div className=\"pokemon-stats-container\">\r\n          <Stats stats={this.state.pokemonStats} />\r\n          <span className=\"pokemon-label\">Stats:</span>\r\n        </div>\r\n\r\n        <div className=\"pokemon-stats-chart\">\r\n          <Chart />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//   {this.state.pokemonSpecies.flavor_text_entries[1].flavor_text}\r\n\r\nconst Abilities = ({ abilities }) => (\r\n  <>\r\n    {abilities.map(ability => (\r\n      <span className=\"pokemon-abilities-info\" key={ability.slot}>\r\n        {ability.ability.name}\r\n      </span>\r\n    ))}\r\n  </>\r\n);\r\n\r\nconst Stats = ({ stats }) => (\r\n  <>\r\n    {stats.map(stat => (\r\n      <div className=\"pokemon-stat-row\" key={uuidv1()}>\r\n        <span className=\"pokemon-stat-value\" key={uuidv1()}>\r\n          {stat.base_stat}\r\n        </span>\r\n        <span className=\"pokemon-stat-label\" key={uuidv1()}>\r\n          {stat.stat.name}\r\n        </span>\r\n      </div>\r\n    ))}\r\n  </>\r\n);\r\n","import React, { Component } from \"react\";\nimport PokemonsList from \"./components/PokemonsList\";\nimport Pokemon from \"./components/Pokemon\";\nimport \"./App.css\";\nimport logo from \"./pokemon2.svg\";\n\nclass App extends Component {\n  state = {\n    selected: \"\"\n  };\n\n  getPokemon = pokemon => {\n    this.setState({ selected: pokemon });\n  };\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <header>\n          <img className=\"header-logo\" src={logo} alt=\"Pokémon\"></img>\n          <PokemonsList parentCallback={this.getPokemon} />\n        </header>\n        {this.state.selected && <Pokemon id={this.state.selected} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}